// This file is used by Code Analysis to maintain SuppressMessage attributes that are applied to this project. Project-level
// suppressions either have no target or are given a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.ExceptionHelper.ThrowIf``1(System.Boolean,System.Object[])")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.ObjectExtensions.IfNull(System.Object,System.String)")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.DateTimeExtensions.FriendlyText(System.DateTime)~System.String")]
[assembly: SuppressMessage("Design", "Ex0101:Member accessor may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~P:Disco.Text.DefaultEncodingProvider.DefaultEncoding")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.StringExtensions.GetString(System.Byte[],System.Int32,System.Nullable{System.Int32})~System.String")]
[assembly: SuppressMessage("Design", "Ex0200:Member is documented as throwing exception not documented on member in base or interface type", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.Text.Base64StringFormatter.FromBase64String(System.String)~System.Byte[]")]
[assembly: SuppressMessage("Design", "Ex0200:Member is documented as throwing exception not documented on member in base or interface type", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.Text.Base64StringFormatter.ToBase64String(System.Byte[],System.Int32,System.Nullable{System.Int32},System.Base64FormattingOptions)~System.String")]
[assembly: SuppressMessage("Style", "IDE0046:转换为条件表达式", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.TypeExtensions.InstanceOf(System.Type,System.Type)~System.Boolean")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.Reflection.MemberInfoExtensions.TryGetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean,System.Attribute@)~System.Boolean")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.Reflection.MemberInfoExtensions.TryGetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean,``0@)~System.Boolean")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.Reflection.MemberInfoExtensions.TryGetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean,System.Attribute[]@)~System.Boolean")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.Reflection.MemberInfoExtensions.TryGetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean,``0[]@)~System.Boolean")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.Reflection.AssemblyExtensions.TryGetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean,System.Attribute@)~System.Boolean")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.Reflection.AssemblyExtensions.TryGetCustomAttribute``1(System.Reflection.Assembly,System.Boolean,``0@)~System.Boolean")]
[assembly: SuppressMessage("Design", "Ex0100:Member may throw undocumented exception", Justification = "<挂起>", Scope = "member", Target = "~M:Disco.Patterns.Builder`1.InternalSetAndGet(System.String,System.Object)~Disco.Patterns.IBuilder{`0}")]
